
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Lab2(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);


//=======================================================
//  REG/WIRE declarations
//=======================================================

reg reg_reset;
wire reset_n;
wire [3:0] num_0;
wire [3:0] num_1;
wire clock_1Hz;

wire [6:0] binary_value;
wire [3:0] day_1s; // 1's place of day val, can be 0-9.
wire [1:0] day_10s; // 10's place of day val, can be 0, 1, 2, 3
wire [1:0] month; // only 4 valid: january (0), february (1), march(2), april(3)


//=======================================================
//  Structural coding
//=======================================================
assign binary_value = (num_1 *10) + ({3'b0,num_0});

divider div(ADC_CLK_10, reset_n, clock_1Hz);
mod10_counter counter_0(clock_1Hz, reset_n, num_0);
mod10_counter counter_1((num_0==0), reset_n, num_1); // 10's place clocks every time the 1's place hits zero.

//When button is pressed, will start counter.
//When pressed again, sets its back to 0 until button is pressed again to restart the counter.
always @ (negedge KEY[0])	begin
		reg_reset <= ~reg_reset;
    end
assign reset_n = reg_reset;


dateconverter dc(binary_value, 0, month, day_1s, day_10s);

// BCD number
sevensegment inst_0(num_0[3:0], 0, 0, 0, HEX4);
sevensegment inst_1(num_1[3:0], 0, 0, (num_1==0), HEX5);

// Month
sevensegment month_0(month+1, 0, 0, 0, HEX2);
sevensegment month_1(0, 0, 0, 1, HEX3); // MSD of month is always blank
// Day
sevensegment day_0_disp(day_1s, 0, 0, 0, HEX0);
sevensegment day_1_disp(day_10s, 0, 0, (day_1==0),HEX1);

// clock to LED
assign LEDR[1] = clock_1Hz;

endmodule

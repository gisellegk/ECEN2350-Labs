
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module lab1_block2(

	//////////// CLOCK //////////
	input 		          		ADC_CLK_10,
	input 		          		MAX10_CLK1_50,
	input 		          		MAX10_CLK2_50,

	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW
);



//=======================================================
//  REG/WIRE declarations
//=======================================================

wire [3:0] A;
wire [3:0] B;
reg [3:0] SUM;
reg SUMSIGN; //show sign = 1


//=======================================================
//  Structural coding
//=======================================================
assign LEDR[9:0] = 10'b0;
sevensegment inst_ASIGN(4'b0, 1'b1, 1'b0, ~SW[7], HEX5);
sevensegment inst_A(A, 1'b0, 1'b0, 1'b0, HEX4);
sevensegment inst_BSIGN(4'b0, 1'b1, 1'b0, ~SW[3], HEX3);
sevensegment inst_B(B, 1'b0, 1'b0, 1'b0, HEX2);
sevensegment inst_SUMSIGN(4'b0, 1'b1, 1'b0, ~SUMSIGN, HEX1);
sevensegment inst_SUM(SUM, 1'b0, 1'b0, 1'b0, HEX0);

twoscompval dispA(SW[7:4], A);
twoscompval dispB(SW[3:0], B);
//twoscompval dispSUM(idk);

always @ (SW[7:0])
	begin

	end


endmodule
